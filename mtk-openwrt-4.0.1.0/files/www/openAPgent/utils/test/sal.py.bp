'''
This file was automatically generated by rmib_compiler.py.
DO NOT EDIT.
'''


from puci.interface import *
from puci.system_config import *
from swigc.sys_usage import *


'''
 Define SAL Method
'''
SAL_METHOD_LIST           = 1
SAL_METHOD_CREATE         = 2
SAL_METHOD_UPDATE         = 3
SAL_METHOD_RETRIEVE       = 4
SAL_METHOD_DETAIL_CREATE  = 5
SAL_METHOD_DETAIL_UPDATE  = 6
SAL_METHOD_PARTIAL_UPDATE = 7
SAL_METHOD_DELETE         = 8



'''
 Define system_usage SAL function
'''
def sal_system_usage(method, request, pk):
  # For SWIG C APIs
  if method == SAL_METHOD_LIST:
    return swigc_system_usage_list()

  if method == SAL_METHOD_RETRIEVE:
    return swigc_system_usage_retrieve(pk, 1)


'''
 Define system_config SAL function
'''
def sal_system_config(method, request, pk):
  # For Python-UCI APIs
  if method == SAL_METHOD_LIST:
    return puci_system_config_list()

  if method == SAL_METHOD_CREATE:
    return puci_system_config_create(request)

  if method == SAL_METHOD_UPDATE:
    return puci_system_config_update(request)

  if method == SAL_METHOD_RETRIEVE:
    return puci_system_config_retrieve(pk, 1)

  if method == SAL_METHOD_DETAIL_CREATE:
    return puci_system_config_detail_create(request, pk)

  if method == SAL_METHOD_DETAIL_UPDATE:
    return puci_system_config_detail_update(request, pk)


'''
 Define interface_config SAL function
'''
def sal_interface_config(method, request, pk):
  # For Python-UCI APIs
  if method == SAL_METHOD_LIST:
    return puci_interface_config_list()

  if method == SAL_METHOD_CREATE:
    return puci_interface_config_create(request)

  if method == SAL_METHOD_UPDATE:
    return puci_interface_config_update(request)

  if method == SAL_METHOD_RETRIEVE:
    return puci_interface_config_retrieve(pk, 1)

  if method == SAL_METHOD_DETAIL_CREATE:
    return puci_interface_config_detail_create(request, pk)

  if method == SAL_METHOD_DETAIL_UPDATE:
    return puci_interface_config_detail_update(request, pk)


'''
 Define interface_v4addr_config SAL function
'''
def sal_interface_v4addr_config(method, request, pk):
  # For Python-UCI APIs
  if method == SAL_METHOD_LIST:
    return puci_interface_v4addr_config_list()

  if method == SAL_METHOD_CREATE:
    return puci_interface_v4addr_config_create(request)

  if method == SAL_METHOD_UPDATE:
    return puci_interface_v4addr_config_update(request)


'''
 Define vlan_config SAL function
'''
def sal_vlan_config(method, request, pk):
  # For Python-UCI APIs
  if method == SAL_METHOD_LIST:
    return puci_vlan_config_list()

  if method == SAL_METHOD_CREATE:
    return puci_vlan_config_create(request)

  if method == SAL_METHOD_UPDATE:
    return puci_vlan_config_update(request)

  if method == SAL_METHOD_RETRIEVE:
    return puci_vlan_config_retrieve(pk, 1)

  if method == SAL_METHOD_DETAIL_CREATE:
    return puci_vlan_config_detail_create(request, pk)

  if method == SAL_METHOD_DETAIL_UPDATE:
    return puci_vlan_config_detail_update(request, pk)


'''
 Define dhcp_common_config SAL function
'''
def sal_dhcp_common_config(method, request, pk):
  # For Python-UCI APIs
  if method == SAL_METHOD_LIST:
    return puci_dhcp_common_config_list()

  if method == SAL_METHOD_CREATE:
    return puci_dhcp_common_config_create(request)

  if method == SAL_METHOD_UPDATE:
    return puci_dhcp_common_config_update(request)


'''
 Define dhcp_pool_config SAL function
'''
def sal_dhcp_pool_config(method, request, pk):
  # For Python-UCI APIs
  if method == SAL_METHOD_LIST:
    return puci_dhcp_pool_config_list()

  if method == SAL_METHOD_CREATE:
    return puci_dhcp_pool_config_create(request)

  if method == SAL_METHOD_UPDATE:
    return puci_dhcp_pool_config_update(request)

  if method == SAL_METHOD_RETRIEVE:
    return puci_dhcp_pool_config_retrieve(pk, 1)

  if method == SAL_METHOD_DETAIL_CREATE:
    return puci_dhcp_pool_config_detail_create(request, pk)

  if method == SAL_METHOD_DETAIL_UPDATE:
    return puci_dhcp_pool_config_detail_update(request, pk)


'''
 Define dhcp_static_leases_config SAL function
'''
def sal_dhcp_static_leases_config(method, request, pk):
  # For Python-UCI APIs
  if method == SAL_METHOD_LIST:
    return puci_dhcp_static_leases_config_list()

  if method == SAL_METHOD_CREATE:
    return puci_dhcp_static_leases_config_create(request)

  if method == SAL_METHOD_UPDATE:
    return puci_dhcp_static_leases_config_update(request)

  if method == SAL_METHOD_RETRIEVE:
    return puci_dhcp_static_leases_config_retrieve(pk, 1)

  if method == SAL_METHOD_DETAIL_CREATE:
    return puci_dhcp_static_leases_config_detail_create(request, pk)

  if method == SAL_METHOD_DETAIL_UPDATE:
    return puci_dhcp_static_leases_config_detail_update(request, pk)


'''
 Define firmware_management SAL function
'''
def sal_firmware_management(method, request, pk):
  # For Python-UCI APIs
  if method == SAL_METHOD_CREATE:
    return puci_firmware_management_create(request)


'''
 Define config_management SAL function
'''
def sal_config_management(method, request, pk):
  # For Python-UCI APIs
  if method == SAL_METHOD_LIST:
    return puci_config_management_list()

  if method == SAL_METHOD_CREATE:
    return puci_config_management_create(request)


'''
 Define if_statistics SAL function
'''
def sal_if_statistics(method, request, pk):
  # For Python-UCI APIs
  if method == SAL_METHOD_LIST:
    return puci_if_statistics_list()

  if method == SAL_METHOD_RETRIEVE:
    return puci_if_statistics_retrieve(pk, 1)


'''
 Define docker_downloads SAL function
'''
def sal_docker_downloads(method, request, pk):
  # For SWIG C APIs
  if method == SAL_METHOD_LIST:
    return swigc_docker_downloads_list()

  if method == SAL_METHOD_RETRIEVE:
    return swigc_docker_downloads_retrieve(pk, 1)

  if method == SAL_METHOD_POST:
    return swigc_docker_downloads_post(request, pk)

  if method == SAL_METHOD_DESTROY:
    return swigc_docker_downloads_destroy(request, pk)

  if method == SAL_METHOD_DETAIL_POST:
    return swigc_docker_downloads_detail_post(request, pk)

  if method == SAL_METHOD_DETAIL_DESTROY:
    return swigc_docker_downloads_detail_destroy(request, pk)


'''
 Define containers_run SAL function
'''
def sal_containers_run(method, request, pk):
  # For SWIG C APIs
  if method == SAL_METHOD_POST:
    return swigc_containers_run_post(request, pk)

  if method == SAL_METHOD_DETAIL_POST:
    return swigc_containers_run_detail_post(request, pk)


'''
 Define containers_get SAL function
'''
def sal_containers_get(method, request, pk):
  # For SWIG C APIs
  if method == SAL_METHOD_LIST:
    return swigc_containers_get_list()

  if method == SAL_METHOD_RETRIEVE:
    return swigc_containers_get_retrieve(pk, 1)


'''
 Define containers_management SAL function
'''
def sal_containers_management(method, request, pk):
  # For SWIG C APIs
  if method == SAL_METHOD_POST:
    return swigc_containers_management_post(request, pk)

  if method == SAL_METHOD_DETAIL_POST:
    return swigc_containers_management_detail_post(request, pk)

